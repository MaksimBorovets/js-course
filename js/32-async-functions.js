// ========  Async functions. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏. –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞   ========

function promiseFunction() {
	return new Promise(function (resolve, reject) {
		setTimeout(() => {
			res = 'success123';
			if (res == 'success') {
				resolve('DONE!');
			} else {
				reject('FAIL!');
			}
		}, 500);
	});
}

async function startPromise() {
	try {
		const result = await promiseFunction();
		console.log(result);
	} catch (error) {
		console.log(error);
	}
}

startPromise();

// ========  –ù–µ—Å–∫–æ–ª—å–∫–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π. –°–µ—Ä–∏—è –ø—Ä–æ–º–∏—Å–æ–≤.   ========

function checkRooms() {
	return new Promise(function (resolve, reject) {
		setTimeout(function () {
			console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–º–µ—Ä–∞ –≤ –æ—Ç–µ–ª–µ...');
			// ---- –∫–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ –æ—Ç–µ–ª—å ---
			let availableRooms = true;

			if (availableRooms) {
				resolve('–ù–æ–º–µ—Ä–∞ –µ—Å—Ç—å!');
			} else {
				reject('–ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.');
			}
		}, 1500);
	});
}

function checkTickets(data) {
	return new Promise(function (resolve, reject) {
		setTimeout(() => {
			console.log('----  checkTickets ----');
			console.log('–û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ:', data);

			console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤–∏–∞–±–∏–ª–µ—Ç—ã...');
			// ---- –∫–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—é ---
			const availableTickets = true;

			if (availableTickets) {
				let message = '–ë–∏–ª–µ—Ç—ã –µ—Å—Ç—å';
				resolve(message);
			} else {
				let message = '–ë–∏–ª–µ—Ç–æ–≤ –Ω–µ—Ç';
				reject(message);
			}
		}, 1000);
	});
}

function submitVacation(data) {
	console.log('---- submitVacation ----');
	console.log('–û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ:', data);
	console.log('–ï–¥–µ–º –≤ –æ—Ç–ø—É—Å–∫! üå¥ :)');
}

function cancelVacation(data) {
	console.log('---- cancelVacation ----');
	console.log('–û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ:', data);
	console.log('–û—Ç–ø—É—Å–∫ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è üò¢ :(');
}

async function checkVacation() {
	// const roomsResult = await checkRooms();
	// const ticketsResult = await checkTickets(roomsResult);

	// if (ticketsResult === '–ë–∏–ª–µ—Ç—ã –µ—Å—Ç—å') {
	// 	submitVacation(ticketsResult);
	// } else {
	// 	cancelVacation(ticketsResult);
	// }

	try {
		const roomsResult = await checkRooms();
		const ticketsResult = await checkTickets(roomsResult);
		submitVacation(ticketsResult);
	} catch (err) {
		cancelVacation(err);
	}
}

checkVacation();
