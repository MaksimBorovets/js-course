// ===========  Callback. Callback hell   ==================

console.log('Start');

setTimeout(function () {
	console.log('Print after 2000ms');
}, 2000);

console.log('Finish');

console.log('Start');

setTimeout(function () {
	console.log('Print after 2000ms');
	setTimeout(function () {
		console.log('Print after 1500ms');
		setTimeout(function () {
			console.log('Print after 1000ms');
			setTimeout(function () {
				console.log('Print after 500ms');
				setTimeout(function () {
					console.log('Print after 100ms');
				}, 100);
			}, 500);
		}, 1000);
	}, 1500);
}, 2000);

//=============  –ü—Ä–∏–º–µ—Ä –±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏  =========

function checkRooms() {
	console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–º–µ—Ä–∞ –≤ –æ—Ç–µ–ª–µ...');
	// ---- –∫–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ –æ—Ç–µ–ª—å ---
	const availableRooms = true;
	return availableRooms;
}

if (checkRooms()) {
	console.log('–ù–æ–º–µ—Ä–∞ –µ—Å—Ç—å!');
	console.log('–ï–¥–µ–º –≤ –æ—Ç–ø—É—Å–∫! üå¥ :)');
} else {
	console.log('–ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.');
	console.log('–û—Ç–ø—É—Å–∫ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è üò¢ :(');
}

// =========  –ü—Ä–∏–º–µ—Ä c –∑–∞–¥–µ—Ä–∂–∫–æ–π. –ü—Ä–æ–±–ª–µ–º–∞. –ù–µ—Ä–∞–±–æ—á–∏–π –∫–æ–¥  =========

/*
- –î–æ–±–∞–≤–∏–º Timeout
- –í–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞, –Ω–µ –º–æ–∂–µ–º –ø–µ—Ä–µ–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ setTimeout
- –î–∞–∂–µ –µ—Å–ª–∏ –≤—ã–Ω–µ—Å—Ç–∏ availableRooms –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
- –î–æ–±–∞–≤–ª—è—Ç—å setTimeout –¥–ª—è if else –Ω–µ–ª—å–∑—è, –ø–æ—Ç–æ–º—É –∫–∞–∫ –º—ã –Ω–µ –∑–Ω–∞–µ–º —Å–∫–æ–ª—å–∫–æ –∏–º–µ–Ω–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–π–º–µ—Ç –∑–∞–ø—Ä–æ—Å
*/

let availableRooms;

function checkRooms() {
	setTimeout(function () {
		console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–º–µ—Ä–∞ –≤ –æ—Ç–µ–ª–µ...');
		availableRooms = true;
		console.log(availableRooms);
		return availableRooms;
	}, 500);
}

checkRooms();

if (availableRooms) {
	console.log('–ù–æ–º–µ—Ä–∞ –µ—Å—Ç—å!');
	console.log('–ï–¥–µ–º –≤ –æ—Ç–ø—É—Å–∫! üå¥ :)');
} else {
	console.log('–ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.');
	console.log('–û—Ç–ø—É—Å–∫ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è üò¢ :(');
}

// =========  –ü—Ä–∏–º–µ—Ä c –∑–∞–¥–µ—Ä–∂–∫–æ–π. –†–µ—à–µ–Ω–∏–µ =========

/*
–†–µ—à–µ–Ω–∏–µ. –ü–æ–º–µ—Å—Ç–∏—Ç—å –∫–æ–¥ if else —Å –¥–∞–ª—å–Ω–µ–π—à–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –≤–Ω—É—Ç—Ä—å setTimeout
*/

function checkRooms() {
	setTimeout(function () {
		console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–º–µ—Ä–∞ –≤ –æ—Ç–µ–ª–µ...');
		let availableRooms = true;

		if (availableRooms) {
			console.log('–ù–æ–º–µ—Ä–∞ –µ—Å—Ç—å!');
			console.log('–ï–¥–µ–º –≤ –æ—Ç–ø—É—Å–∫! üå¥ :)');
		} else {
			console.log('–ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.');
			console.log('–û—Ç–ø—É—Å–∫ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è üò¢ :(');
		}
	}, 500);
}

checkRooms();

// =========  –ê –µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–π –±—É–¥–µ—Ç –±–æ–ª—å—à–µ. callBackHell =========

// 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–º–µ—Ä–∞ –≤ –æ—Ç–µ–ª–µ
// 2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∏–ª–µ—Ç—ã ‚úà
// - –õ–µ—Ç–∏–º –≤ –æ—Ç–ø—É—Å–∫! üå¥ :)
// - –û—Ç–ø—É—Å–∫ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è üò¢ :(

function checkRooms(success, failed) {
	setTimeout(function () {
		console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–º–µ—Ä–∞ –≤ –æ—Ç–µ–ª–µ...');
		let availableRooms = true;

		if (availableRooms) {
			success('–ù–æ–º–µ—Ä–∞ –µ—Å—Ç—å!');
		} else {
			failed('–ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.');
		}
	}, 500);
}

// –í—ã–Ω–µ—Å–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ –£—Å–ø–µ—Ö–µ –∏ –ù–µ—É–¥–∞—á–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

function cancelVacation(message) {
	console.log('---- cancelVacation ----');
	console.log('–û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ:', message);
	console.log('–û—Ç–ø—É—Å–∫ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è üò¢ :(');
}

function sumbitVacation(message) {
	console.log('---- sumbitVacation ----');
	console.log('–û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ:', message);
	console.log('–ï–¥–µ–º –≤ –æ—Ç–ø—É—Å–∫! üå¥ :)');
}

// –£–∂–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è –∑–∞—á–∞—Ç–∫–∏ callback Hell))
// –ö–æ–¥ –Ω–∞—á–∏–Ω–∞–µ—Ç —É–µ–∑–∂–∞—Ç—å –≤–ø—Ä–∞–≤–æ

checkRooms(
	function (messageFromCheckRooms) {
		sumbitVacation();
	},
	function (messageFromCheckRooms) {
		cancelVacation(messageFromCheckRooms);
	}
);

// =========  –î–æ–±–∞–≤–∏–º –µ—â–µ –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∏–ª–µ—Ç—ã. callBackHell =========

// –ò —Å–¥–µ–ª–∞–µ–º —Ç–∞–∫ —á—Ç–æ–±—ã —Ñ—É–Ω–∫—Ü–∏—è checkTickets()
// –ø—Ä–∏–Ω–∏–º–∞–ª–∞ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ä–∞–±–æ—Ç—ã checkRooms()

function checkRooms(success, failed) {
	setTimeout(function () {
		console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–º–µ—Ä–∞ –≤ –æ—Ç–µ–ª–µ...');
		let availableRooms = true;

		if (availableRooms) {
			success('–ù–æ–º–µ—Ä–∞ –µ—Å—Ç—å!');
		} else {
			failed('–ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç.');
		}
	}, 500);
}

// –î–æ–±–∞–≤–∏–º —Ñ-—é checkTickets –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–∞–Ω–Ω—ã–µ (—Å–æ–æ–±—â–µ–Ω–∏–µ)
// –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è, –∏ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ success –∏–ª–∏ failed
function checkTickets(message, success, failed) {
	setTimeout(() => {
		console.log('---- function checkTickets ----');
		console.log('–û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ:', message);

		console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤–∏–∞–±–∏–ª–µ—Ç—ã...');
		// ---- –∫–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—é ---
		const availableTickets = true;

		if (availableTickets) {
			let message = '–ë–∏–ª–µ—Ç—ã –µ—Å—Ç—å';
			success(message);
		} else {
			let message = '–ë–∏–ª–µ—Ç–æ–≤ –Ω–µ—Ç';
			failed(message);
		}
	}, 1000);
}

// –°–æ–æ–±—â–µ–Ω–∏—è –æ –£—Å–ø–µ—Ö–µ –∏ –ù–µ—É–¥–∞—á–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

function cancelVacation(message) {
	console.log('---- cancelVacation ----');
	console.log('–û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ:', message);
	console.log('–û—Ç–ø—É—Å–∫ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è üò¢ :(');
}

function sumbitVacation(message) {
	console.log('---- sumbitVacation ----');
	console.log('–û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ:', message);
	console.log('–ï–¥–µ–º –≤ –æ—Ç–ø—É—Å–∫! üå¥ :)');
}

// callback Hell —Ä–∞–∑—Ä–æ—Å—Ç–∞–µ—Ç—Å—è
// –∫–æ–¥ —É–µ–∑–∂–∞–µ—Ç –≤–ø—Ä–∞–≤–æ

checkRooms(
	function (messageFromCheckRooms) {
		checkTickets(
			messageFromCheckRooms,
			function () {
				sumbitVacation(messageFromCheckRooms);
			},
			function () {
				cancelVacation(messageFromCheckRooms);
			}
		);
	},
	function (messageFromCheckRooms) {
		cancelVacation(messageFromCheckRooms);
	}
);
